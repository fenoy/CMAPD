import numpy as np
from oracle import oracle

def read_grid(grid_file):
    with open(grid_file) as f:
        size = tuple(map(int, f.readline().strip().split(',')))
    return np.genfromtxt(grid_file, delimiter=1, skip_header=1, dtype='S').ravel() == b'@', size

paths = [
    [[1, 20, 0], [8, 29, 1], [5, 2, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[13, 5, 0], [13, 12, 1], [4, 33, 1], [17, 24, -1], [17, 32, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[14, 5, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[17, 10, 0], [13, 13, 1], [5, 16, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[1, 10, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[6, 30, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[13, 24, 0], [19, 33, 1], [15, 4, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[14, 33, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[8, 32, 0], [3, 30, 1], [3, 25, 1], [3, 16, -1], [16, 2, 1], [13, 8, 1], [12, 29, -1], [13, 10, 1], [13, 18, -1], [13, 29, -1], [8, 1, -1]],
    [[19, 13, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[5, 13, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], 
    [[1, 21, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[15, 18, 0], [2, 30, 1], [9, 26, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[14, 32, 0], [11, 15, 1], [7, 15, 1], [19, 12, -1], [18, 29, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[9, 27, 0], [15, 25, 1], [3, 8, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[3, 4, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[7, 23, 0], [7, 32, 1], [13, 21, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[11, 7, 0], [11, 14, 1], [16, 30, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[1, 26, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]],
    [[12, 33, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]]]


num_agents = len(paths)
grid, grid_size = read_grid('../env/grid.map')

agents = [[p[:-1] for p in a if p[0] != -1] for a in paths]
sep = np.array(list(map(len, agents)), dtype=np.int32)
agents = np.array([p[0] * grid_size[1] + p[1] for a in agents for p in a], dtype=np.int32)

value = oracle(grid, agents, sep, num_agents, len(agents), grid_size[0], grid_size[1])
print(value)
